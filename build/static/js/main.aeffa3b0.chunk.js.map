{"version":3,"sources":["services/person.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification/index.js","App.js","index.js"],"names":["baseUrl","axios","get","newPerson","post","id","delete","put","Filter","searchName","filterByName","value","type","onChange","e","target","PersonForm","name","number","updateNewValue","updatePhoneBook","onClick","Person","person","onDelete","Persons","persons","onDeletePerson","map","key","Notification","message","className","App","useState","setPersons","displayPersons","setDisplayPersons","newName","setNewName","newNumber","setNewNumber","setSearchName","notification","setNotification","re","RegExp","matchPersons","filter","match","fetchPerson","personService","then","data","catch","err","console","error","useEffect","resetFields","fieldName","preventDefault","trimmedName","trim","trimmedNumber","existedPerson","find","window","confirm","response","finally","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeffa3b0.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl)\n\nconst create = (newPerson) => axios.post(baseUrl, newPerson)\n\nconst deleteById = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\nconst updateById = (id, newPerson) => axios.put(`${baseUrl}/${id}`, newPerson)\n\nexport default {\n  getAll,\n  create,\n  deleteById,\n  updateById\n}","import React from 'react'\n\nconst Filter = ({searchName, filterByName}) => {\n\n  const handlerChange = (e) => {\n    filterByName(e.target.value)\n  }\n  return (\n    <div>\n      Filter shown with <input value={searchName} type=\"text\" onChange={handlerChange}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({name, number, updateNewValue, updatePhoneBook}) => {\n  return (\n    <form>\n      <div>\n        name: <input value={name} type=\"text\" name={'name'} onChange={updateNewValue}/>\n      </div>\n      <div>\n        number: <input value={number} type=\"text\" name={'number'} onChange={updateNewValue}/>\n      </div>\n      <div>\n        <button onClick={updatePhoneBook} type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\nconst Person = ({person, onDelete}) => {\n\n\n  return <li>{person.name} {person.number} <button onClick={() => onDelete(person)}>delete</button></li>\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, onDeletePerson}) => {\n\n  return (\n    <ul>\n      {persons.map(\n        (person) => <Person key={person.id} person={person} onDelete={onDeletePerson}/>)\n      }\n    </ul>\n  )\n}\n\nexport default Persons","import React from 'react'\nimport './Notification.css'\nconst Notification = ({message, type}) => {\n  return <div className={`message ${type}`}>\n    <p>{message}</p>\n  </div>\n}\nexport default Notification","import React, {useEffect, useState} from 'react'\nimport personService from './services/person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [displayPersons, setDisplayPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [notification, setNotification] = useState({\n    message: null,\n    type: null\n  })\n\n\n  const filterByName = (name) => {\n    if (!name) {\n      // display all\n      setDisplayPersons([...persons])\n    } else {\n      let re = new RegExp(name, 'i') // case insensitive\n      let matchPersons = persons.filter(person => person.name.match(re))\n      setDisplayPersons([...matchPersons])\n    }\n    setSearchName(name)\n  }\n\n  const fetchPerson = () => {\n    personService.getAll().then(({data}) => {\n      if (data) {\n        setPersons([...data])\n      }\n    }).catch(err => {\n      console.error(err)\n    })\n  }\n\n  // fetch data from server\n  useEffect(() => {\n    fetchPerson()\n  }, [])\n\n  // whenever the person change such as push new person, then reset filter\n  useEffect(() => {\n    filterByName('')\n  }, [persons])\n\n\n  const updateNewValue = (e) => {\n    const fieldName = e.target.name\n    const value = e.target.value\n    if (fieldName === 'name') {\n      setNewName(value)\n    } else if (fieldName === 'number') {\n      setNewNumber(value)\n    }\n  }\n  const resetFields = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n  const updatePhoneBook = (e) => {\n    e.preventDefault()\n    const trimmedName = newName.trim()\n    const trimmedNumber = newNumber.trim()\n    if (trimmedName && trimmedNumber) {\n      // prevent user input exist name\n      const existedPerson = persons.find(person => person.name === trimmedName)\n      if (existedPerson) {\n        const answer = window.confirm(`${trimmedName} is already added to phonebook, replace the old number with new one`)\n        if (answer) {\n          personService.updateById(existedPerson.id, {...existedPerson, number: trimmedNumber})\n            .then(({data}) => {\n              setNotification({message: 'update success', type: 'success'})\n              resetFields()\n            })\n            .catch(err => {\n              if (err.response && err.response.data && err.response.data.error) {\n                setNotification({message: `${err.response.data.error}`, type: 'error'})\n              } else {\n                setNotification({\n                  message: `Cannot update user`,\n                  type: 'error'\n                })\n              }\n            })\n            .finally(() => fetchPerson())\n        }\n      } else {\n        // send to server\n        personService.create({name: trimmedName, number: trimmedNumber})\n          .then(({data}) => {\n            if (data.id) {\n              setPersons([...persons, {...data}])\n              setNotification({message: `added ${data.name}`, type: 'success'})\n              resetFields()\n            }\n          })\n          .catch(err => {\n            if (err.response && err.response.data && err.response.data.error) {\n              setNotification({message: `${err.response.data.error}`, type: 'error'})\n            } else {\n              setNotification({message: `cannot added new person`, type: 'error'})\n            }\n          })\n\n        // reset input field\n\n      }\n    }\n  }\n  const onDeletePerson = (person) => {\n    const answer = window.confirm(`Delete ${person.name}?`)\n    if (answer) {\n      personService.deleteById(person.id)\n        .then(({data}) => {\n          setNotification({\n            message: `removed ${person.name}`,\n            type: 'error'\n          })\n        })\n        .catch(err => {\n          setNotification({\n            message: `information of ${person.name} has already been removed from server`,\n            type: 'error'\n          })\n        })\n        .finally(() => {\n          fetchPerson()\n        })\n    }\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      {notification.message && <Notification message={notification.message} type={notification.type}/>}\n\n      <Filter searchName={searchName} filterByName={filterByName}/>\n      <h3>Add New</h3>\n      <PersonForm name={newName} number={newNumber} updateNewValue={updateNewValue} updatePhoneBook={updatePhoneBook}/>\n      <h2>Numbers</h2>\n      <Persons onDeletePerson={onDeletePerson} persons={displayPersons}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}